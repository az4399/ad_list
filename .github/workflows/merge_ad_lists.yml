name: Merge Ad Lists

on:
  schedule:
    # 每3小时运行一次
    - cron: '0 */6 * * *'
  # 允许手动触发工作流
  workflow_dispatch:
  
# 设置权限
permissions:
  contents: write

jobs:
  merge-ad-lists:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      
      - name: Install dependencies
        run: pip install requests
      
      - name: Download and merge ad lists
        run: |
          python -c '
          import requests
          import time
          
          # 广告列表URL
          ad_lists = [
              "https://anti-ad.net/easylist.txt",
              "https://anti-ad.net/adguard.txt",
              "https://raw.githubusercontent.com/uniartisan/adblock_list/master/adblock_plus.txt",
              "https://raw.githubusercontent.com/uniartisan/adblock_list/master/adblock_privacy.txt",
              "https://raw.githubusercontent.com/TG-Twilight/AWAvenue-Ads-Rule/main/AWAvenue-Ads-Rule.txt",
              "https://raw.githubusercontent.com/LoopDns/Fuck-you-MIUI/main/MIhosts",
              "https://raw.githubusercontent.com/LoopDns/Fuck-you-MIUI/main/Fhosts"
          ]
          
          # 用于存储所有列表内容的集合
          all_content = set()
          
          # 下载并合并列表
          for url in ad_lists:
              try:
                  print(f"正在下载: {url}")
                  response = requests.get(url, timeout=30)
                  if response.status_code == 200:
                      # 按行分割并添加到集合中
                      lines = response.text.split("\n")
                      for line in lines:
                          line = line.strip()
                          if line and not line.startswith("!") and not line.startswith("#"):
                              all_content.add(line)
                      print(f"成功下载 {url}, 获取 {len(lines)} 行")
                  else:
                      print(f"下载失败: {url}, 状态码: {response.status_code}")
              except Exception as e:
                  print(f"处理 {url} 时出错: {str(e)}")
              
              # 短暂休息，避免过于频繁的请求
              time.sleep(2)
          
          # 将合并后的内容写入文件
          timestamp = time.strftime("%Y-%m-%d %H:%M:%S", time.gmtime())
          header = f"! Title: Merged Ad Block List\n! Last updated: {timestamp} UTC\n! Total rules: {len(all_content)}\n\n"
          
          with open("ad.txt", "w", encoding="utf-8") as f:
              f.write(header)
              for line in sorted(all_content):
                  f.write(line + "\n")
          
          print(f"成功合并所有列表，总计 {len(all_content)} 条规则")'
      
      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add ad.txt
          git diff --quiet && git diff --staged --quiet || git commit -m "Update ad block list ($(date +%Y-%m-%d\ %H:%M:%S\ %Z))"
          # 使用 GITHUB_TOKEN 进行推送
          git push origin HEAD:${GITHUB_REF}
